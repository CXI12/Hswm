{"gimmediona":[],"stu0":[{"title":"您有新訊息","content":"import heapq\r\n\r\ndef dijkstra(graph, start):\r\n    row, col = len(graph), len(graph[0])\r\n    heap = [(graph[0][0], 0, 0)]  # (cost, row, col)\r\n    visited = [[False] * col for _ in range(row)]\r\n\r\n    while heap:\r\n        cost, r, c = heapq.heappop(heap)\r\n\r\n        if r == row - 1 and c == col - 1:\r\n            return cost\r\n\r\n        if visited[r][c]:\r\n            continue\r\n\r\n        visited[r][c] = True\r\n\r\n        for dr, dc in [(-1, 0), (1, 0), (0, -1), (0, 1)]:\r\n            nr, nc = r + dr, c + dc\r\n            if 0 <= nr < row and 0 <= nc < col and not visited[nr][nc]:\r\n                heapq.heappush(heap, (cost + graph[nr][nc], nr, nc))\r\n\r\n# 讀取測試案例數\r\nt = int(input())\r\n\r\nfor _ in range(t):\r\n    # 讀取迷宮大小\r\n    n = int(input())\r\n    m = int(input())\r\n\r\n    # 讀取迷宮內容\r\n    maze = [list(map(int, input().split())) for _ in range(n)]\r\n\r\n    # 使用Dijkstra算法找到最短路徑\r\n    result = dijkstra(maze, (0, 0))\r\n    print(result)\r\n","stat":"unsend","link":"/chat/","time":"2023-11-17 09:52","bg-color":"bg-info-subtle","icon":"bi-chat-left"},{"title":"您有新訊息","content":"\n","stat":"unsend","link":"/chat/","time":"2023-11-16 16:03","bg-color":"bg-info-subtle","icon":"bi-chat-left"},{"title":"您有新訊息","content":"\n\n","stat":"unsend","link":"/chat/","time":"2023-11-16 16:03","bg-color":"bg-info-subtle","icon":"bi-chat-left"},{"title":"您有新訊息","content":"\n","stat":"unsend","link":"/chat/","time":"2023-11-16 16:03","bg-color":"bg-info-subtle","icon":"bi-chat-left"},{"title":"您有新訊息","content":"\n\n","stat":"unsend","link":"/chat/","time":"2023-11-16 16:03","bg-color":"bg-info-subtle","icon":"bi-chat-left"},{"title":"您有新訊息","content":"\n","stat":"unsend","link":"/chat/","time":"2023-11-16 16:03","bg-color":"bg-info-subtle","icon":"bi-chat-left"},{"title":"您有新訊息","content":"1","stat":"unsend","link":"/chat/","time":"2023-11-16 15:56","bg-color":"bg-info-subtle","icon":"bi-chat-left"},{"title":"您有新訊息","content":"跟段考一樣??","stat":"unsend","link":"/chat/","time":"2023-11-15 17:24","bg-color":"bg-info-subtle","icon":"bi-chat-left"},{"title":"您有新訊息","content":"模擬考數學範圍到哪裡?","stat":"unsend","link":"/chat/","time":"2023-11-15 17:24","bg-color":"bg-info-subtle","icon":"bi-chat-left"},{"title":"您有新訊息","content":"會計要寫到哪裡??","stat":"unsend","link":"/chat/","time":"2023-11-15 17:21","bg-color":"bg-info-subtle","icon":"bi-chat-left"},{"title":"您有新訊息","content":"#104商業技藝競賽正式試題\n#Problem 4：資料結構—樹 子題 2：最小成本生成樹。(程式執行限制時間: 2 秒)\n#Author:Yotrew\n#20210712\n\ntable={}\nfor i in range(65,65+26):\n    table[chr(i)]=i-65\nn=int(input())\nnode=[]\nvisited=[]\nfor i in range(0,n):\n    x=input().strip().split()\n    adj=[[65536 for a in range(0,26)] for a in range(0,26)]#相鄰串列\n    node=[0 for a in range(0,26)]#最多就26個點\n    visited=[0 for a in range(0,26)]#最多就26個點\n    for a in x:\n        y=a.split(\",\")\n        #print(y)\n        adj[table[y[0]]][table[y[1]]]=int(y[2])\n        adj[table[y[1]]][table[y[0]]]=int(y[2])\n        node[table[y[0]]]=1\n        node[table[y[1]]]=1\n    node_cnt=0\n    #print(node)\n    start=-1\n    for a in range(0,len(node)):\n        if(node[a]==1):\n            start=a\n            node_cnt+=1\n\n    #Prim 演算法：\n    queue=[]\n\n    queue.append(start)\n    cost=0\n    visited[start]=1\n    while len(queue)<(node_cnt):\n        min_pos=65536#邊最大值為65535\n        min_target=-1\n        for a in queue:\n            #print(a,queue)\n            \n            for b in range(0,len(adj[a])):\n                if(a==b):\n                    continue\n                if(visited[b]==0 and adj[a][b]<min_pos and node[b]==1):#未被拜訪過的點,且邊為最小\n                    min_pos=adj[a][b]\n                    min_target=b\n        if(min_target!=-1):\n            cost+=min_pos\n            queue.append(min_target)\n            visited[min_target]=1\n    print(cost)","stat":"unsend","link":"/chat/","time":"2023-11-15 15:52","bg-color":"bg-info-subtle","icon":"bi-chat-left"},{"title":"您有新訊息","content":"#104商業技藝競賽正式試題\n#Problem 4：資料結構—樹 子題 2：最小成本生成樹。(程式執行限制時間: 2 秒)\n#Author:Yotrew\n#20210712\n\ntable={}\nfor i in range(65,65+26):\n    table[chr(i)]=i-65\nn=int(input())\nnode=[]\nvisited=[]\nfor i in range(0,n):\n    x=input().strip().split()\n    adj=[[65536 for a in range(0,26)] for a in range(0,26)]#相鄰串列\n    node=[0 for a in range(0,26)]#最多就26個點\n    visited=[0 for a in range(0,26)]#最多就26個點\n    for a in x:\n        y=a.split(\",\")\n        #print(y)\n        adj[table[y[0]]][table[y[1]]]=int(y[2])\n        adj[table[y[1]]][table[y[0]]]=int(y[2])\n        node[table[y[0]]]=1\n        node[table[y[1]]]=1\n    node_cnt=0\n    #print(node)\n    start=-1\n    for a in range(0,len(node)):\n        if(node[a]==1):\n            start=a\n            node_cnt+=1\n\n    #Prim 演算法：\n    queue=[]\n\n    queue.append(start)\n    cost=0\n    visited[start]=1\n    while len(queue)<(node_cnt):\n        min_pos=65536#邊最大值為65535\n        min_target=-1\n        for a in queue:\n            #print(a,queue)\n            \n            for b in range(0,len(adj[a])):\n                if(a==b):\n                    continue\n                if(visited[b]==0 and adj[a][b]<min_pos and node[b]==1):#未被拜訪過的點,且邊為最小\n                    min_pos=adj[a][b]\n                    min_target=b\n        if(min_target!=-1):\n            cost+=min_pos\n            queue.append(min_target)\n            visited[min_target]=1\n    print(cost)","stat":"unsend","link":"/chat/","time":"2023-11-15 12:06","bg-color":"bg-info-subtle","icon":"bi-chat-left"},{"title":"您有新訊息","content":"#104商業技藝競賽正式試題 #Problem 4：資料結構—樹 子題 2：最小成本生成樹。(程式執行限制時間: 2 秒) #Author:Yotrew #20210712  table={} for i in range(65,65+26):     table[chr(i)]=i-65 n=int(input()) node=[] visited=[] for i in range(0,n):     x=input().strip().split()     adj=[[65536 for a in range(0,26)] for a in range(0,26)]#相鄰串列     node=[0 for a in range(0,26)]#最多就26個點     visited=[0 for a in range(0,26)]#最多就26個點     for a in x:         y=a.split(\",\")         #print(y)         adj[table[y[0]]][table[y[1]]]=int(y[2])         adj[table[y[1]]][table[y[0]]]=int(y[2])         node[table[y[0]]]=1         node[table[y[1]]]=1     node_cnt=0     #print(node)     start=-1     for a in range(0,len(node)):         if(node[a]==1):             start=a             node_cnt+=1      #Prim 演算法：     queue=[]      queue.append(start)     cost=0     visited[start]=1     while len(queue)<(node_cnt):         min_pos=65536#邊最大值為65535         min_target=-1         for a in queue:             #print(a,queue)                          for b in range(0,len(adj[a])):                 if(a==b):                     continue                 if(visited[b]==0 and adj[a][b]<min_pos and node[b]==1):#未被拜訪過的點,且邊為最小                     min_pos=adj[a][b]                     min_target=b         if(min_target!=-1):             cost+=min_pos             queue.append(min_target)             visited[min_target]=1     print(cost)","stat":"unsend","link":"/chat/","time":"2023-11-15 11:55","bg-color":"bg-info-subtle","icon":"bi-chat-left"},{"title":"您有新訊息","content":"#104商業技藝競賽正式試題 #Problem 4：資料結構—樹 子題 2：最小成本生成樹。(程式執行限制時間: 2 秒) #Author:Yotrew #20210712  table={} for i in range(65,65+26):     table[chr(i)]=i-65 n=int(input()) node=[] visited=[] for i in range(0,n):     x=input().strip().split()     adj=[[65536 for a in range(0,26)] for a in range(0,26)]#相鄰串列     node=[0 for a in range(0,26)]#最多就26個點     visited=[0 for a in range(0,26)]#最多就26個點     for a in x:         y=a.split(\",\")         #print(y)         adj[table[y[0]]][table[y[1]]]=int(y[2])         adj[table[y[1]]][table[y[0]]]=int(y[2])         node[table[y[0]]]=1         node[table[y[1]]]=1     node_cnt=0     #print(node)     start=-1     for a in range(0,len(node)):         if(node[a]==1):             start=a             node_cnt+=1      #Prim 演算法：     queue=[]      queue.append(start)     cost=0     visited[start]=1     while len(queue)<(node_cnt):         min_pos=65536#邊最大值為65535         min_target=-1         for a in queue:             #print(a,queue)                          for b in range(0,len(adj[a])):                 if(a==b):                     continue                 if(visited[b]==0 and adj[a][b]<min_pos and node[b]==1):#未被拜訪過的點,且邊為最小                     min_pos=adj[a][b]                     min_target=b         if(min_target!=-1):             cost+=min_pos             queue.append(min_target)             visited[min_target]=1     print(cost)","stat":"unsend","link":"/chat/","time":"2023-11-15 11:41","bg-color":"bg-info-subtle","icon":"bi-chat-left"},{"title":"您有新訊息","content":"123","stat":"unsend","link":"/chat/","time":"2023-10-14 21:41","bg-color":"bg-info-subtle","icon":"bi-chat-left"},{"title":"您有新訊息","content":"12","stat":"unsend","link":"/chat/","time":"2023-09-30 00:13","bg-color":"bg-info-subtle","icon":"bi-chat-left"},{"title":"您有新訊息","content":"12","stat":"unsend","link":"/chat/","time":"2023-09-30 00:13","bg-color":"bg-info-subtle","icon":"bi-chat-left"},{"title":"您有新訊息","content":"32","stat":"unsend","link":"/chat/","time":"2023-09-30 00:13","bg-color":"bg-info-subtle","icon":"bi-chat-left"},{"title":"您有新訊息","content":"23","stat":"unsend","link":"/chat/","time":"2023-09-30 00:13","bg-color":"bg-info-subtle","icon":"bi-chat-left"},{"title":"您有新訊息","content":"31","stat":"unsend","link":"/chat/","time":"2023-09-30 00:13","bg-color":"bg-info-subtle","icon":"bi-chat-left"},{"title":"您有新訊息","content":"12","stat":"unsend","link":"/chat/","time":"2023-09-30 00:13","bg-color":"bg-info-subtle","icon":"bi-chat-left"},{"title":"您有新訊息","content":"123","stat":"unsend","link":"/chat/","time":"2023-09-30 00:13","bg-color":"bg-info-subtle","icon":"bi-chat-left"},{"title":"您有新訊息","content":"123","stat":"unsend","link":"/chat/","time":"2023-09-30 00:13","bg-color":"bg-info-subtle","icon":"bi-chat-left"},{"title":"您有新訊息","content":"123\\","stat":"unsend","link":"/chat/","time":"2023-09-30 00:13","bg-color":"bg-info-subtle","icon":"bi-chat-left"},{"title":"您有新訊息","content":"123","stat":"unsend","link":"/chat/","time":"2023-09-30 00:13","bg-color":"bg-info-subtle","icon":"bi-chat-left"},{"title":"您有新訊息","content":"123","stat":"unsend","link":"/chat/","time":"2023-09-30 00:12","bg-color":"bg-info-subtle","icon":"bi-chat-left"},{"title":"您有新訊息","content":"123","stat":"unsend","link":"/chat/","time":"2023-09-30 00:12","bg-color":"bg-info-subtle","icon":"bi-chat-left"}],"stu001":[],"s46689263@gmail.com":[{"title":"您有新訊息","content":"55","stat":"unsend","link":"/chat/","time":"2023-09-04 19:16","bg-color":"bg-info-subtle","icon":"bi-chat-left"},{"title":"您有新訊息","content":"55","stat":"unsend","link":"/chat/","time":"2023-09-04 19:16","bg-color":"bg-info-subtle","icon":"bi-chat-left"},{"title":"您有新訊息","content":"5555","stat":"unsend","link":"/chat/","time":"2023-09-04 19:14","bg-color":"bg-info-subtle","icon":"bi-chat-left"},{"title":"您有新訊息","content":"借我測試啦哈哈","stat":"unsend","link":"/chat/","time":"2023-09-04 19:14","bg-color":"bg-info-subtle","icon":"bi-chat-left"}],"administrator":[{"title":"您有新訊息","content":"12321","stat":"unsend","link":"/chat/","time":"2023-09-26 09:10","bg-color":"bg-info-subtle","icon":"bi-chat-left"},{"title":"您有新訊息","content":"123","stat":"unsend","link":"/chat/","time":"2023-09-04 22:23","bg-color":"bg-info-subtle","icon":"bi-chat-left"}],"106017":[{"title":"您有新訊息","content":"老","stat":"unsend","link":"/chat/","time":"2023-12-10 14:21","bg-color":"bg-info-subtle","icon":"bi-chat-left"},{"title":"您有新訊息","content":"狗屎","stat":"unsend","link":"/chat/","time":"2023-09-11 11:14","bg-color":"bg-info-subtle","icon":"bi-chat-left"},{"title":"您有新訊息","content":"4","stat":"unsend","link":"/chat/","time":"2023-09-11 11:13","bg-color":"bg-info-subtle","icon":"bi-chat-left"},{"title":"您有新訊息","content":"123","stat":"unsend","link":"/chat/","time":"2023-09-11 11:13","bg-color":"bg-info-subtle","icon":"bi-chat-left"},{"title":"您有新訊息","content":"123","stat":"unsend","link":"/chat/","time":"2023-09-11 11:13","bg-color":"bg-info-subtle","icon":"bi-chat-left"},{"title":"您有新訊息","content":"北七喔","stat":"unsend","link":"/chat/","time":"2023-09-11 11:12","bg-color":"bg-info-subtle","icon":"bi-chat-left"}],"teacher001":[]}